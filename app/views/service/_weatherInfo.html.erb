<%
  #1.행정구역정보
  #csv에서 db생성 - 한번만
    # filename = Rails.root.join('address.csv')
    # CSV.foreach(filename) do |row|
    #    puts row[0..2].join
    #    puts row[3]
    #    puts row[4]
    #    @address = row[0..2].join
    #    @xPoint = row[3].to_i
    #    @yPoint = row[4].to_i
    #    Address.create(address: @address, nx: @xPoint, ny: @yPoint) #단수로
    #
    #    # use row here...
    # end
  @keyword=params[:keyword]
  #Foo.where("bar ILIKE ?", "%#{query}%")
  #MyModel.where(["title LIKE ?", "%#{params[:query]}%"])
  puts Address.where("address LIKE ?", "%#{@keyword}%")
  #@result = Address.where("address LIKE ?", "%#{@keyword}%")
  @result = Address.find_by("address LIKE ?", "%#{@keyword}%")
  @regionNx=@result.nx
  @regionNy=@result.ny

  #2.해당구역기상정보
  key = "rpPNq6qHiRzGIWy5TseuMtDGujDtmv2mkajUVifmHD0Sp%2Bo54J8uyJUzbC1t83MJUVC22Q8SSASrDGUdRIcN4w%3D%3D"
  @todayDate=20180117.to_s
  weather_url = URI.encode("http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastSpaceData?base_date=#{@todayDate}&base_time=0500&nx=#{@regionNx}&ny=#{@regionNy}&pageNo=1&numOfRows=50&ServiceKey=")+key
  response_weather = RestClient.get(weather_url)
  #@weather_info = Nokogiri::XML(response_weather)
  @weather_info = Nokogiri::Slop <<-EOXML
    #{response_weather}
  EOXML
  # puts @weather_info.response.body.items
  arr = @weather_info.response.body.items.item #array 선언 후 하나씩 검색
  @Water = Array.new()
  @Sky = Array.new()

  arr.each do |i|
    if i.category.content == 'PTY' #없음(0), 비(1), 비/눈(2), 눈(3)
      puts i.fcstTime.content + "시의 강수는 " + i.fcstValue.content
      if i.fcstValue.content == '0'
        precipitation = '비 안옴'
      elsif i.fcstValue.content == '1'
        precipitation = '비 예정'
      elsif i.fcstValue.content == '2'
        precipitation = '비 또는 눈 예정'
      elsif i.fcstValue.content == '3'
        precipitation = '눈'
      end
      @Water << i.fcstTime.content + "시의 강수는 " + precipitation

    elsif i.category.content == 'SKY'  #맑음(1), 구름조금(2), 구름많음(3), 흐림(4)
      puts i.fcstTime.content + "시의 하늘은 " + i.fcstValue.content
      if i.fcstValue.content == '1'
        cloud = '맑음'
      elsif i.fcstValue.content == '2'
        cloud = '구름 조금'
      elsif i.fcstValue.content == '3'
        cloud = '구름 많음'
      elsif i.fcstValue.content == '4'
        cloud = '흐림'
      end
      @Sky << i.fcstTime.content + "시의 하늘은 " + cloud
    end
  end
end
%>
